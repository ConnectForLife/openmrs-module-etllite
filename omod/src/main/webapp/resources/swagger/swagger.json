{
  "swagger" : "2.0",
  "info" : {
    "description" : "REST API for ETL Lite Module.",
    "version" : "v1",
    "title" : "ETL Lite Module REST API"
  },
  "basePath" : "/openmrs/ws",
  "tags" : [ {
    "name" : "Mappings",
    "description" : "REST API for accessing ETL Lite mappings"
  }, {
    "name" : "Settings",
    "description" : "REST API for accessing ETL Lite settings"
  } ],
  "paths" : {
    "/etllite/configs" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Retrieves list of source database settings and Spring services defined in the system",
        "description" : "Retrieves list of source database settings and Spring services defined in the system",
        "operationId" : "getConfigs",
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of source database settings",
            "schema" : {
              "$ref" : "#/definitions/ConfigResponseWrapper"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Create or Update a source database settings and spring services",
        "description" : "Create or Update a source database settings and spring services",
        "operationId" : "updateConfigs",
        "parameters" : [ {
          "in" : "body",
          "name" : "configRequestWrapper",
          "description" : "Details of source database configurations and spring services to be created or updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConfigRequestWrapper"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful update of the source database settings",
            "schema" : {
              "$ref" : "#/definitions/ConfigResponseWrapper"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Delete all source database settings",
        "description" : "Delete all source database settings",
        "operationId" : "deleteAll",
        "responses" : {
          "200" : {
            "description" : "Successful deletion of all source database settings"
          }
        }
      }
    },
    "/etllite/configs/{name}" : {
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes a specific source database settings",
        "description" : "Deletes a specific source database settings",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the source database settings to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful deletion of the source database settings"
          }
        }
      }
    },
    "/etllite/configs/{name}/test" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Test a ETL database connectivity",
        "description" : "Return true if the specified ETL database connection is successful, false if not",
        "operationId" : "testDatabase",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Name of the ETL database settings to be tested",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Connectivity to the source database is successful",
            "schema" : {
              "type" : "boolean"
            }
          },
          "500" : {
            "description" : "Connectivity to the source database is not successful"
          }
        }
      }
    },
    "/etllite/mappings" : {
      "get" : {
        "tags" : [ "Mappings" ],
        "summary" : "Retrieves list of ETL Lite mappings defined in the system",
        "description" : "Retrieves list of ETL Lite mappings defined in the system for a specific source database or specific mapping id if the lookup parameter is present in the request object. Otherwise retrieve all mappings",
        "operationId" : "findMappings",
        "parameters" : [ {
          "name" : "lookup",
          "in" : "query",
          "description" : "Returns list of mappings for a specified source if the lookup parameter is present with value \"By Source\" in the request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "description" : "source system name defined in the ETL settings",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Mapping id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful retrieval of ETL Lite mappings",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MappingResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Mappings" ],
        "summary" : "Add a new ETL mapping",
        "description" : "Add a new ETL mapping",
        "operationId" : "create",
        "parameters" : [ {
          "in" : "body",
          "name" : "mappingRequest",
          "description" : "MappingRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MappingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful creation of the ETL Lite mapping",
            "schema" : {
              "$ref" : "#/definitions/MappingResponse"
            }
          },
          "409" : {
            "description" : "Mapping already exists in the system"
          }
        }
      }
    },
    "/etllite/mappings/{id}" : {
      "put" : {
        "tags" : [ "Mappings" ],
        "summary" : "Updates a specific ETL mapping",
        "description" : "Updates a specific ETL mapping",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the mapping to be updated",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "mappingRequest",
          "description" : "Details of the mapping to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MappingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful update of the ETL Lite mapping",
            "schema" : {
              "$ref" : "#/definitions/MappingResponse"
            }
          },
          "404" : {
            "description" : "Mapping does not exists in the system"
          }
        }
      },
      "delete" : {
        "tags" : [ "Mappings" ],
        "summary" : "Deletes a specific ETL mapping",
        "description" : "Deletes a specific ETL mapping",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the mapping to be deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful deletion of the ETL Lite mapping"
          },
          "404" : {
            "description" : "Mapping does not exists in the system"
          }
        }
      }
    },
    "/etllite/mappings/{id}/test" : {
      "get" : {
        "tags" : [ "Mappings" ],
        "summary" : "Test a specific ETL mapping",
        "description" : "Test a specific mapping and returns extracted and transformed results",
        "operationId" : "testMapping",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of the mapping to be tested",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful testing of the mapping",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "404" : {
            "description" : "Mapping does not exists in the system"
          },
          "500" : {
            "description" : "Internal Error"
          }
        }
      }
    }
  },
  "definitions" : {
    "Config" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        },
        "dbPassword" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        }
      }
    },
    "ConfigRequestWrapper" : {
      "type" : "object",
      "properties" : {
        "databases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "services" : {
          "type" : "string"
        }
      }
    },
    "ConfigResponse" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "ConfigResponseWrapper" : {
      "type" : "object",
      "properties" : {
        "databases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigResponse"
          }
        },
        "services" : {
          "type" : "string"
        }
      }
    },
    "MappingRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "cronExpression" : {
          "type" : "string"
        },
        "loadTemplate" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "transformTemplate" : {
          "type" : "string"
        },
        "fetchSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "testResultsSize" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MappingResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "source" : {
          "type" : "string"
        },
        "loadTemplate" : {
          "type" : "string"
        },
        "transformTemplate" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "cronExpression" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "fetchSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "testResultsSize" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}